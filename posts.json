{
    "posts": [
      {
        "id": 1,
        "title": "Project Updates: Slomo, Inflight Entertainment App, and Bookmark Manager",
        "date": "April 2, 2025",
        "description": "A progress update on the Slomo music slowdown app, plans for launching an inflight entertainment app, and the technology stack decision for our bookmark manager project.",
        "tags": ["SwiftUI", "MacOS", "Laravel", "React", "App Development"],
        "fullContent": {
          "introduction": "This week, we made significant progress on several projects, including our Slomo app, a potential inflight entertainment app, and a new bookmark manager project. Here’s a breakdown of what we discussed and our next steps.",
          "sections": [
            {
              "title": "Slomo: A MacOS Music Slowdown App",
              "content": "We had a productive meeting with Aron regarding Slomo, our MacOS music slowdown app built with Catalyst and SwiftUI. We've identified a few bugs: (1) The waveform does not resize properly when resizing the window, and (2) There's an issue with retrieving MP3 files from the bundle due to permission errors when restarting the app. Additionally, using Cursor AI's Auto model selection has caused errors: one where Cursor fails to recognize an existing class file and another where the Swift linter introduces issues that Cursor keeps iterating on unnecessarily. Aron will investigate these bugs this week."
            },
            {
              "title": "Inflight Entertainment App: A New Launch Strategy",
              "content": "We revisited an app we developed last year, originally pitched to local airline companies for inflight entertainment. Since those partnerships didn’t work out, we’re considering launching it ourselves on the iOS App Store for free with Google Ads. I plan to experiment with TikTok marketing to drive organic interest. This will also give me an opportunity to log into my Google AdSense account and check on an issue affecting ads in my other game, Mathogen."
            },
            {
              "title": "Bookmark Manager App: Choosing the Right Stack",
              "content": "Instead of jumping into coding with Cursor, we took a step back to research the best stack for our bookmark manager project. After evaluating our options, we decided on Laravel for the backend and React for the frontend. This week, I'll be looking into hosting solutions, and Aron and I will check in next week to finalize details and plan our next steps."
            }
          ],
          "conclusion": "We’ve made great strides in debugging Slomo, pivoting our inflight entertainment app strategy, and finalizing the tech stack for our bookmark manager. Next week, we’ll continue refining these projects and making key implementation decisions. Stay tuned for more updates!"
        }
      },
      {
        "id": 2,
        "title": "CSS Grid vs Flexbox: When to Use Each",
        "date": "June 3, 2023",
        "description": "A comparison of CSS Grid and Flexbox layout systems and guidelines on when to use each approach.",
        "tags": ["CSS", "Web Design", "Frontend"],
        "fullContent": {
          "introduction": "CSS Grid and Flexbox are two powerful layout systems that have revolutionized web design. While they share some similarities, they're designed for different use cases. Understanding when to use each can significantly improve your development workflow and the structure of your websites.",
          "sections": [
            {
              "title": "Understanding Flexbox",
              "content": "Flexbox (Flexible Box Module) is designed for one-dimensional layouts - either a row or a column. It excels at aligning items and distributing space along a single axis. Flexbox is ideal for:\n\n- Navigation bars and menus\n- Centering elements\n- Aligning elements in a row or column\n- Creating flexible item sizes that adapt to available space"
            },
            {
              "title": "Understanding CSS Grid",
              "content": "CSS Grid is designed for two-dimensional layouts - rows and columns together. It gives you precise control over placement in both dimensions and is perfect for:\n\n- Overall page layouts\n- Complex grid-based designs\n- Placing items in exact positions\n- Creating responsive layouts that change dramatically between breakpoints"
            },
            {
              "title": "When to Choose Flexbox",
              "content": "Choose Flexbox when:\n\n- You're laying out items in a single dimension (row OR column)\n- You want content to determine the layout\n- You need alignment and space distribution for similar items\n- You're working with small-scale layouts"
            },
            {
              "title": "When to Choose Grid",
              "content": "Choose Grid when:\n\n- You're creating a two-dimensional layout (rows AND columns)\n- You need precise placement of elements\n- You want the layout to determine content flow\n- You're working with larger-scale layouts"
            }
          ],
          "conclusion": "The best approach is often to use both: CSS Grid for the overall page layout, and Flexbox for alignment within grid items. They complement each other perfectly, and modern browsers support both layout systems. By understanding the strengths of each, you can create more maintainable and responsive layouts with less code."
        }
      },
      {
        "id": 3,
        "title": "Building Accessible Web Applications",
        "date": "July 22, 2023",
        "description": "Best practices for making your web applications accessible to all users, including those with disabilities.",
        "tags": ["Accessibility", "Web Development", "UX"],
        "fullContent": {
          "introduction": "Web accessibility ensures that people with disabilities can perceive, understand, navigate, and interact with the web. It's not just a moral and legal obligation but also improves the user experience for everyone. This post explores key strategies for building truly accessible web applications.",
          "sections": [
            {
              "title": "Semantic HTML",
              "content": "Using semantic HTML elements is the foundation of accessibility. Elements like <nav>, <main>, <header>, <footer>, and <article> provide meaning to screen readers and other assistive technologies. Always prefer semantic elements over generic <div> and <span> elements when appropriate."
            },
            {
              "title": "Keyboard Navigation",
              "content": "Many users with motor disabilities rely on keyboard navigation. Ensure all interactive elements are focusable and operable with a keyboard alone. Use logical tab order and provide visible focus states. Test your application by navigating it using only the keyboard."
            },
            {
              "title": "ARIA Attributes",
              "content": "ARIA (Accessible Rich Internet Applications) attributes help communicate states and properties to assistive technologies. Use them when semantic HTML alone isn't sufficient. Examples include aria-label, aria-expanded, and aria-hidden. However, remember that ARIA doesn't change the behavior or appearance of elements - it only affects how they're interpreted by assistive technologies."
            },
            {
              "title": "Color and Contrast",
              "content": "Ensure sufficient color contrast between text and its background. The WCAG 2.1 guidelines recommend a contrast ratio of at least 4.5:1 for normal text and 3:1 for large text. Also, never use color alone to convey information - always provide additional indicators for users with color blindness."
            }
          ],
          "conclusion": "Building accessible web applications is about inclusion - ensuring that everyone can use your product regardless of their abilities. By implementing these best practices from the start of your project, you'll create better experiences for all users while meeting legal requirements in many jurisdictions. Remember, accessibility isn't a feature or a checklist; it's a commitment to all your users."
        }
      }
    ]
  }